/******************************************************************************
*  Filename:       rf_patch_mce_tof.h
*  Revised:        $Date: 2019-04-29 17:29:16 +0200 (ma, 29 apr 2019) $
*  Revision:       $Revision: 19024 $
*
*  Description: RF core MCE patch for time of flight 2Mbps PHY for CC13x2 and CC26x2
*
*  Copyright (c) 2015-2019, Texas Instruments Incorporated
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions are met:
*
*  1) Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2) Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3) Neither the name of the ORGANIZATION nor the names of its contributors may
*     be used to endorse or promote products derived from this software without
*     specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
*  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
*  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
*  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
*  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
*  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
*  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
*  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*
******************************************************************************/

#ifndef _RF_PATCH_MCE_TOF_H
#define _RF_PATCH_MCE_TOF_H

#include <stdint.h>
#include "../inc/hw_types.h"

#ifndef MCE_PATCH_TYPE
#define MCE_PATCH_TYPE static const uint32_t
#endif

#ifndef PATCH_FUN_SPEC
#define PATCH_FUN_SPEC static inline
#endif

#ifndef RFC_MCERAM_BASE
#define RFC_MCERAM_BASE 0x21008000
#endif

#ifndef MCE_PATCH_MODE
#define MCE_PATCH_MODE 0
#endif

MCE_PATCH_TYPE patchTofMce[508] = { 
   0x00036056,
   0x00f1000f,
   0x00000000,
   0x000c8000,
   0x00000000,
   0x0c650000,
   0x80000000,
   0x00800010,
   0x00000000,
   0x05900b1e,
   0x00000000,
   0x00000000,
   0x000000ff,
   0x3737001f,
   0x0003005a,
   0x00000037,
   0xfe6b2840,
   0xdeade8ca,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x00000000,
   0x07d00011,
   0x6fdd2fea,
   0x0fb00ff0,
   0x001f0003,
   0x8010005a,
   0x03400000,
   0x40000800,
   0x67f1c030,
   0x72637223,
   0x7303a35d,
   0x72037305,
   0x73067304,
   0x73917204,
   0xc7c07291,
   0x00018001,
   0x90109001,
   0x90010801,
   0x720e720d,
   0x7210720f,
   0x7100b0d0,
   0xb110a0d0,
   0x8162721b,
   0x39521020,
   0x00200670,
   0x11011630,
   0x6c011401,
   0x609b608c,
   0x616660ae,
   0x608c6203,
   0x608c608c,
   0x609b608c,
   0x616660ae,
   0x608c6203,
   0x608c608c,
   0x608e6090,
   0x60911220,
   0x72231212,
   0x73127311,
   0x73147313,
   0x001281b1,
   0xb07091b2,
   0xc011606e,
   0xc710c2b2,
   0x6f131820,
   0x16116e23,
   0x689f1612,
   0x99907d30,
   0x8161c022,
   0x18123981,
   0x9a12d040,
   0x609067f1,
   0x671167e8,
   0xc070679c,
   0xb75091f0,
   0xb914672b,
   0x674db233,
   0xa003a750,
   0x95b488d4,
   0x95c488e4,
   0x95948ca4,
   0x95a487c4,
   0x95d488d4,
   0x95e488e4,
   0x9134c0f4,
   0x8c809144,
   0x40cc2200,
   0xb0d0b0f6,
   0xb136b0d5,
   0xb100b110,
   0x7314b140,
   0x7ca07313,
   0x90502ad0,
   0x2a007cb0,
   0xc9609060,
   0x67b868dc,
   0x1e0ec0f1,
   0x161140e2,
   0xb9129931,
   0xb041c037,
   0xc031b115,
   0x7100a910,
   0xb910b073,
   0x809073a3,
   0x45622200,
   0x226280b2,
   0x80c2450d,
   0x41002202,
   0xb061b063,
   0x87228b11,
   0x18213d82,
   0xb2349701,
   0xa1007314,
   0x40e62250,
   0x22008240,
   0x220f450a,
   0x100f40e6,
   0x60e667b8,
   0x67ce100f,
   0xa91360e6,
   0xb237b234,
   0xa0d5ba39,
   0xb0d1720f,
   0x7100b111,
   0xb1119937,
   0xb35d7100,
   0x9930c3f0,
   0xc0d0b074,
   0x894193f0,
   0xb1119791,
   0xba3b7100,
   0xb078ba3a,
   0x9930c210,
   0xb235a232,
   0x7100b111,
   0xb06ea35d,
   0xa0d17291,
   0x67f1c050,
   0x8c528c33,
   0x8c441423,
   0x14248c62,
   0x06f28b32,
   0x31418b21,
   0x97a20012,
   0x0424cff2,
   0x31433143,
   0x97b40034,
   0x6945c8f0,
   0xb130b235,
   0xb136a0f0,
   0xb140a0f6,
   0xb914a100,
   0xa7507291,
   0xa002a003,
   0x9010c7c0,
   0x72047203,
   0x73067305,
   0xa23267e8,
   0x8242b235,
   0x45591e02,
   0xc0607223,
   0x609067f1,
   0xa232b235,
   0x61478942,
   0xc00f67e8,
   0xc070679c,
   0x672b91f0,
   0x67f1c070,
   0x8c80b013,
   0x41722200,
   0xb0d0b0f6,
   0xb111b0d5,
   0x7313b136,
   0xb9127291,
   0x1e0ec0e1,
   0x1611417e,
   0xc0379931,
   0xb232b041,
   0x67f1c080,
   0xa910c031,
   0x7100b115,
   0xb910b073,
   0x8090ba3e,
   0x46002200,
   0x226280b2,
   0x2250459e,
   0x82404184,
   0x459b2200,
   0x4184220f,
   0x67b8100f,
   0x100f6184,
   0x618467ce,
   0xb234b913,
   0xa0d5ba39,
   0x7313720f,
   0x73147210,
   0x264081b0,
   0xb0d191b0,
   0x7100b111,
   0x9937b041,
   0x7100b111,
   0xc3f0b35d,
   0xb0749930,
   0x93f0c0d0,
   0x7100b111,
   0xc210b078,
   0xa2329930,
   0x7100b111,
   0xb06ea35d,
   0xa0d1a910,
   0x67f1c090,
   0x899167d9,
   0x81a01401,
   0x99311401,
   0xb0d6b116,
   0xb1167100,
   0x8090a0d6,
   0x46002200,
   0x88d4b012,
   0x88e495b4,
   0x8ca495c4,
   0x87c49594,
   0x729195a4,
   0x2a208230,
   0x92302630,
   0xc070674d,
   0x8af287b1,
   0x3d823182,
   0x69e7c310,
   0xb111b064,
   0xa0f6b136,
   0xa0f0b130,
   0x8242b235,
   0x45ee1e02,
   0x7291b914,
   0xa002a003,
   0x9010c7c0,
   0x72047203,
   0x73067305,
   0x67f1c0a0,
   0x609067e8,
   0x7291b235,
   0x85b461ee,
   0x89839974,
   0x997485c4,
   0x14038980,
   0x1803c100,
   0x99748594,
   0x85a48982,
   0x89809974,
   0xc1001402,
   0x31121802,
   0x31833113,
   0x39823182,
   0x97220032,
   0xc00b679c,
   0x91f0c070,
   0xc0b0672b,
   0xb91467f1,
   0x7251727a,
   0xb0137226,
   0x73147313,
   0x8c8072c9,
   0x422f2200,
   0x85b06233,
   0x95d085c1,
   0xb10095e1,
   0xb110b140,
   0xb0f6b064,
   0xb0d5b0d0,
   0x7313b136,
   0xb041b061,
   0x42431e1b,
   0xb9127291,
   0xc13772c9,
   0x1e0ec070,
   0x99304247,
   0xb115b232,
   0xa910c031,
   0xb0737100,
   0x73a3b910,
   0x22008090,
   0x80b2470b,
   0x46712262,
   0x220280c2,
   0xb0634264,
   0x8b11b061,
   0x3d828722,
   0x97011821,
   0xb140b234,
   0x6249a100,
   0x42492250,
   0x22008240,
   0x220f466e,
   0x100f4249,
   0x624967b8,
   0x67ce100f,
   0x1e1b6249,
   0xa9154290,
   0xb913b916,
   0x8b33ba3b,
   0x8b2406f3,
   0x00433144,
   0x8b5397a3,
   0x8c339513,
   0x14038c50,
   0x8c448c60,
   0x31431404,
   0x00343143,
   0x671197b4,
   0x265081b0,
   0xc0c091b0,
   0x62c767f1,
   0xb234a913,
   0xb1b4b237,
   0x67f1c0d0,
   0xba399937,
   0x720fa0d5,
   0xb111b0d1,
   0x7100b111,
   0xc3e0b35d,
   0xb0749930,
   0x93f0c0d0,
   0x97918941,
   0x7100b111,
   0xc210b078,
   0xa2329930,
   0xb111b235,
   0xa35d7100,
   0x7291b06e,
   0xba3ba0d1,
   0x06f38b33,
   0x31448b24,
   0x92630043,
   0x8c508c33,
   0x8c601403,
   0x14048c44,
   0x31433143,
   0x97b40034,
   0x6ac5c8f0,
   0xbc9062ea,
   0x95b488d4,
   0x95c488e4,
   0x95948ca4,
   0x95a487c4,
   0x85b0c01b,
   0x95d085c1,
   0x731195e1,
   0x73137312,
   0xb1007314,
   0xb0f6b140,
   0xb110b136,
   0xa232b064,
   0x22628242,
   0xb06442df,
   0xb232b115,
   0x6ae7c410,
   0x624967b8,
   0xb140b235,
   0xb136a100,
   0xb914a0f6,
   0xa7507291,
   0xa002a003,
   0x9010c7c0,
   0x72047203,
   0x73067305,
   0x73127311,
   0x73147313,
   0x720d720f,
   0x720e7210,
   0xb235a232,
   0x1e028242,
   0x72234702,
   0x67f1c0e0,
   0xb2356090,
   0x8942a232,
   0x67f1c0f0,
   0x88d462eb,
   0x89839974,
   0x997488e4,
   0x14038980,
   0x1803c100,
   0x99748ca4,
   0x87c48982,
   0x89809974,
   0xc1001402,
   0x31121802,
   0x31833113,
   0x39823182,
   0x97220032,
   0x82427000,
   0x432b2212,
   0xb016b006,
   0xb002b012,
   0xb014b004,
   0x90307ca0,
   0x7cb09050,
   0x90609040,
   0x73127311,
   0x73147313,
   0x720e720d,
   0x7210720f,
   0xb0e1b121,
   0xb0727100,
   0xd680a0e1,
   0x67b86b48,
   0x93f0c090,
   0xc1007000,
   0xbc9067f1,
   0x9930c080,
   0xb910b911,
   0xb111b0d1,
   0x72917100,
   0xb111a0d1,
   0x9635722c,
   0xc0f38c82,
   0xb013b003,
   0x92c08170,
   0x96408190,
   0xb120b0e0,
   0x22027100,
   0x85b04772,
   0x92c39640,
   0x7100b120,
   0x964085c0,
   0x7100b120,
   0x96408590,
   0xb12092c3,
   0x85a07100,
   0xb1209640,
   0x8cb07100,
   0xb1209640,
   0x96367100,
   0x9930c040,
   0xb910b911,
   0xb111b0d1,
   0xb120a0e0,
   0x72917100,
   0xb111a0d1,
   0x1e108750,
   0xb2354391,
   0xa9156398,
   0xb913b916,
   0x2a308230,
   0x92302620,
   0x6b99c090,
   0x7000ac90,
   0x721b7223,
   0x92c0c0f0,
   0xc1f1722f,
   0xc01592d1,
   0x7c977c86,
   0x8c807ccc,
   0x43ab2200,
   0x7cf063ad,
   0xac909440,
   0xc1009636,
   0x816e91e0,
   0xc01d398e,
   0x43b71e0e,
   0x7000c03d,
   0x726a7269,
   0xb0537ce2,
   0xc76093a2,
   0x73a36bbe,
   0x96908a40,
   0x96a18a51,
   0x7cd07000,
   0x8a4393a0,
   0x31338a54,
   0x31343d33,
   0x70003d34,
   0x8a439a31,
   0x31338a54,
   0x31343d63,
   0x96933d64,
   0xb05396a4,
   0xc0007000,
   0x8c33c082,
   0x18348c44,
   0x4fe31c24,
   0x4be51442,
   0x10d063e7,
   0xc00063e7,
   0x700018d0,
   0x720e720d,
   0x7210720f,
   0x73127311,
   0x73147313,
   0x9a007000,
   0x220089f0,
   0xb9e047f2,
   0x00007000
};

PATCH_FUN_SPEC void rf_patch_mce_tof(void)
{
#ifdef __PATCH_NO_UNROLLING
   uint32_t i;
   for (i = 0; i < 508; i++) {
      HWREG(RFC_MCERAM_BASE + 4 * i) = patchTofMce[i];
   }
#else
   const uint32_t *pS = patchTofMce;
   volatile unsigned long *pD = &HWREG(RFC_MCERAM_BASE);
   uint32_t t1, t2, t3, t4, t5, t6, t7, t8;
   uint32_t nIterations = 63;

   do {
      t1 = *pS++;
      t2 = *pS++;
      t3 = *pS++;
      t4 = *pS++;
      t5 = *pS++;
      t6 = *pS++;
      t7 = *pS++;
      t8 = *pS++;
      *pD++ = t1;
      *pD++ = t2;
      *pD++ = t3;
      *pD++ = t4;
      *pD++ = t5;
      *pD++ = t6;
      *pD++ = t7;
      *pD++ = t8;
   } while (--nIterations);

   t1 = *pS++;
   t2 = *pS++;
   t3 = *pS++;
   t4 = *pS++;
   *pD++ = t1;
   *pD++ = t2;
   *pD++ = t3;
   *pD++ = t4;
#endif
}

#endif
